local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library/main/Library", true))()

local window = library:AddWindow("MoonHub-Elerium-Public", {
    main_color = Color3.fromRGB(0, 0, 0), -- Color
    min_size = Vector2.new(470, 470), -- Size of the GUI
    can_resize = false,
})

-- Define toggle variables
local autoJoinToggleBrawl = false 
local autoJoinToggleBrawlGOD = false  
local matrixkillaura = false
local fasttools = false
local autoweight = false
local autopushups = false
local autositups = false
local autohandstands = false

local Main = window:AddTab("Main")
local folder = Main:AddFolder("Misc")

folder:AddButton("Anti AFK", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
end)

folder:AddSwitch("Auto Join Brawl", function(state)
    autoJoinToggleBrawl = state
    if autoJoinToggleBrawl then
        task.spawn(function()
            while autoJoinToggleBrawl do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(2)
            end
        end)
    end
end)

folder:AddSwitch("Auto Join Brawl GOD", function(state)
    autoJoinToggleBrawlGOD = state
    if autoJoinToggleBrawlGOD then
        task.spawn(function()
            while autoJoinToggleBrawlGOD do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(0)
            end
        end)
    end
end)

folder:AddButton("Infinite Yield", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkNetworks/Infinite-Yield/main/latest.lua'))()
end)

folder:AddButton("FREE Auto Lift Pass", function()
    local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
    local player = game:GetService("Players").LocalPlayer
    for _, gamepass in pairs(gamepassFolder:GetChildren()) do
        local value = Instance.new("IntValue")
        value.Name = gamepass.Name
        value.Value = gamepass.Value
        value.Parent = player.ownedGamepasses
    end
end)

folder:AddSwitch("Matrix Kill Aura", function(state)
    matrixkillaura = state
    if matrixkillaura then
        getgenv().killNearby = true
        local radiusVisual = Instance.new("Part")
        radiusVisual.Anchored = true
        radiusVisual.CanCollide = false
        radiusVisual.Transparency = 0.8
        radiusVisual.Material = Enum.Material.ForceField
        radiusVisual.Color = Color3.fromRGB(0, 0, 0)
        radiusVisual.Size = Vector3.new(1, 0.1, 1)
        radiusVisual.Parent = workspace

        task.spawn(function()
            while getgenv().killNearby do
                pcall(function()
                    local myCharacter = game.Players.LocalPlayer.Character
                    local myRoot = myCharacter and myCharacter:FindFirstChild("HumanoidRootPart")
                    if myRoot then
                        local currentRadius = 10 -- You may need to define or update `currentRadius`
                        radiusVisual.Size = Vector3.new(currentRadius * 5, 5.5, currentRadius * 2)
                        radiusVisual.CFrame = myRoot.CFrame * CFrame.new(0, -2, 0)
                        
                        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                            if player ~= game.Players.LocalPlayer then
                                local char = player.Character
                                local root = char and char:FindFirstChild("HumanoidRootPart")
                                if root and (root.Position - myRoot.Position).Magnitude <= currentRadius then
                                    -- Effect handling
                                    local killEffect = Instance.new("Part")
                                    killEffect.Anchored = true
                                    killEffect.CanCollide = false
                                    killEffect.Transparency = 0.5
                                    killEffect.Material = Enum.Material.Neon
                                    killEffect.Color = Color3.fromRGB(0, 0, 0)
                                    killEffect.CFrame = root.CFrame
                                    killEffect.Size = Vector3.new(5, 5, 5)
                                    killEffect.Parent = workspace
                                    
                                    -- Tween effect
                                    game:GetService("TweenService"):Create(killEffect, TweenInfo.new(0.5), {
                                        Size = Vector3.new(0, 0, 0),
                                        Transparency = 1
                                    }):Play()
                                    
                                    game:GetService("Debris"):AddItem(killEffect, 0.5)
                                    firetouchinterest(root, myCharacter.LeftHand, 0)
                                    task.wait()
                                    firetouchinterest(root, myCharacter.LeftHand, 1)
                                end
                            end
                        end
                        
                        task.wait(0.1)
                    end
                end)
                task.wait(0.1)
            end
            radiusVisual:Destroy()
        end)
    end
end)

folder:AddSwitch("Fast Tools", function(state)
    fasttools = state
    local speed = state and 0 or 0.35
    local player = game.Players.LocalPlayer
    local backpack = player:WaitForChild("Backpack")

    local toolsSpeed = {
        {"Punch", "attackTime", speed},
        {"Ground Slam", "attackTime", state and 0 or 6},
        {"Stomp", "attackTime", state and 0 or 7},
        {"Handstands", "repTime", speed},
        {"Pushups", "repTime", speed},
        {"Weight", "repTime", speed},
        {"Situps", "repTime", speed}
    }

    for _, toolInfo in ipairs(toolsSpeed) do
        local tool = backpack:FindFirstChild(toolInfo[1]) or (player.Character and player.Character:FindFirstChild(toolInfo[1]))
        if tool and tool:FindFirstChild(toolInfo[2]) then
            tool[toolInfo[2]].Value = toolInfo[3]
        end
    end
end)

--------------------------------------------------------------------------------
-- Auto Weight Tab
local AutoWeight = window:AddTab("Auto Weight")
local folder = AutoWeight:AddFolder("Auto Tools")

local function createAutoCallback(actionName, toolName)
    folder:AddSwitch(actionName, function(state)
        local toolState = state
        _G[actionName] = toolState -- Set global variable to the current state

        if toolState then
            local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(toolName)
            if tool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
                while toolState do
                    game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                    task.wait(0.001)
                end
                -- Unequip tool when turning off
                local character = game.Players.LocalPlayer.Character
                if character:FindFirstChild(toolName) then
                    character[toolName].Parent = game.Players.LocalPlayer.Backpack
                end
            end
        end
    end)
end

createAutoCallback("Auto Weight", "Weight")
createAutoCallback("Auto Pushups", "Pushups")
createAutoCallback("Auto Situps", "Situps")
createAutoCallback("Auto Handstands", "Handstands")


local folder2 = Misc:AddFolder("Auto Boulders")

local function createAutoRockSwitch(rockName, requiredDurability)
    folder2:AddSwitch(rockName, function(state)
        local autoRockEnabled = state
        getgenv().autoFarm = autoRockEnabled
        
        while autoRockEnabled do
            task.wait()
            local player = game:GetService("Players").LocalPlayer
            local durability = player.Durability.Value
            
            if durability >= requiredDurability then
                for _, v in pairs(game.Workspace.machinesFolder:GetDescendants()) do
                    if v.Name == "neededDurability" and v.Value == requiredDurability then
                        local character = player.Character
                        if character:FindFirstChild("LeftHand") and character:FindFirstChild("RightHand") then
                            firetouchinterest(v.Parent.Rock, character.RightHand, 0)
                            firetouchinterest(v.Parent.Rock, character.RightHand, 1)
                            firetouchinterest(v.Parent.Rock, character.LeftHand, 0)
                            firetouchinterest(v.Parent.Rock, character.LeftHand, 1)
                            gettool() -- Presuming this function is defined elsewhere
                        end
                    end
                end
            end
            
            autoRockEnabled = getgenv().autoFarm -- To check for termination from outside
        end
    end)
end

createAutoRockSwitch("Auto Tiny Rock", 0)
createAutoRockSwitch("Starter Rock Island", 100)
createAutoRockSwitch("Legends Beach Rock", 5000)
