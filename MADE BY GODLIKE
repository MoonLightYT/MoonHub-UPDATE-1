local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library/main/Library", true))()

local window = library:AddWindow("MoonHub-Elerium-Public", {
    main_color = Color3.fromRGB(0, 0, 0), -- Color
    min_size = Vector2.new(470, 470), -- Size of the GUI
    can_resize = false,
})

local Main = window:AddTab("Main")  -- Changed from Window to window
local folder = Main:AddFolder("Misc")

folder:AddButton("Anti AFK", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
end)

local autoJoinToggleBrawl = false  -- Renamed for clarity
folder:AddSwitch("Auto Join Brawl", function(state)
    autoJoinToggleBrawl = state
    if autoJoinToggleBrawl then
        task.spawn(function()
            while autoJoinToggleBrawl do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(2)
            end
        end)
    end
end)

local autoJoinToggleBrawlGOD = false  -- Separate toggle for the second switch
folder:AddSwitch("Auto Join Brawl GOD", function(state)
    autoJoinToggleBrawlGOD = state
    if autoJoinToggleBrawlGOD then
        task.spawn(function()
            while autoJoinToggleBrawlGOD do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(0)  -- Can change wait time according to need
            end
        end)
    end
end)

folder:AddButton("Infinite Yield", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkNetworks/Infinite-Yield/main/latest.lua'))()
end)

folder:AddButton("FREE Auto Lift Pass", function()
    local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
    local player = game:GetService("Players").LocalPlayer
    for _, gamepass in pairs(gamepassFolder:GetChildren()) do
        local value = Instance.new("IntValue")
        value.Name = gamepass.Name
        value.Value = gamepass.Value
        value.Parent = player.ownedGamepasses
    end
end)


folder:AddSwitch("Matrix Kill Aura", function(state)
    matrixkillaura = state
    if matrixkillaura then
        getgenv().killNearby = true -- Changed `v` to `true` if `v` is not defined elsewhere
        local radiusVisual = Instance.new("Part")
        radiusVisual.Anchored = true
        radiusVisual.CanCollide = false
        radiusVisual.Transparency = 0.8
        radiusVisual.Material = Enum.Material.ForceField
        radiusVisual.Color = Color3.fromRGB(0, 0, 0)
        radiusVisual.Size = Vector3.new(1, 0.1, 1)

        radiusVisual.Parent = workspace -- Move this outside the loop

        task.spawn(function()
            while getgenv().killNearby do
                pcall(function()
                    local myCharacter = game.Players.LocalPlayer.Character
                    local myRoot = myCharacter and myCharacter:FindFirstChild("HumanoidRootPart")
                    if myRoot then
                        radiusVisual.Size = Vector3.new(currentRadius * 5, 5.5, currentRadius * 2)
                        radiusVisual.CFrame = myRoot.CFrame * CFrame.new(0, -2, 0)
                        local effects = createParticles(myRoot)

                        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                            if player ~= game.Players.LocalPlayer and not whitelist[player.Name] then
                                local char = player.Character
                                local root = char and char:FindFirstChild("HumanoidRootPart")
                                if root then
                                    local distance = (root.Position - myRoot.Position).Magnitude
                                    if distance <= currentRadius then
                                        local killEffect = Instance.new("Part")
                                        killEffect.Anchored = true
                                        killEffect.CanCollide = false
                                        killEffect.Transparency = 0.5
                                        killEffect.Material = Enum.Material.Neon
                                        killEffect.Color = Color3.fromRGB(0, 0, 0)
                                        killEffect.CFrame = root.CFrame
                                        killEffect.Size = Vector3.new(5, 5, 5)
                                        killEffect.Parent = workspace
                                        
                                        -- Tween to shrink the effect
                                        game:GetService("TweenService"):Create(killEffect, TweenInfo.new(0.5), {
                                            Size = Vector3.new(0, 0, 0),
                                            Transparency = 1
                                        }):Play()
                                        
                                        game:GetService("Debris"):AddItem(killEffect, 0.5)
                                        firetouchinterest(root, myCharacter.LeftHand, 0)
                                        task.wait()
                                        firetouchinterest(root, myCharacter.LeftHand, 1)
                                        gettool() -- Make sure gettool() is defined
                                    end
                                end
                            end
                        end
                        
                        task.wait(0.1)
                        for _, effect in ipairs(effects) do
                            effect:Destroy()
                        end
                    end
                end)
                task.wait(0.1)
            end
            radiusVisual:Destroy()
        end)
    end
end)


folder:AddSwitch("Fast Tools", function(state)
    fasttools = state
    if fasttools then
        _G.FastTools = true  -- Assuming you want to set it as true when enabled
        local defaultSpeeds = {
            {"Punch", "attackTime", state and 0 or 0.35},
            {"Ground Slam", "attackTime", state and 0 or 6},
            {"Stomp", "attackTime", state and 0 or 7},
            {"Handstands", "repTime", state and 0 or 1},
            {"Pushups", "repTime", state and 0 or 1},
            {"Weight", "repTime", state and 0 or 1},
            {"Situps", "repTime", state and 0 or 1}
        }

        local player = game.Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")

        for _, toolInfo in ipairs(defaultSpeeds) do
            local tool = backpack:FindFirstChild(toolInfo[1])
            if tool and tool:FindFirstChild(toolInfo[2]) then
                tool[toolInfo[2]].Value = toolInfo[3]
            end
            local equippedTool = player.Character and player.Character:FindFirstChild(toolInfo[1])
            if equippedTool and equippedTool:FindFirstChild(toolInfo[2]) then
                equippedTool[toolInfo[2]].Value = toolInfo[3]
            end
        end
    else
        -- Optional: Reset back to default values when fast tools are disabled
        local defaultSpeeds = {
            {"Punch", "attackTime", 0.35},
            {"Ground Slam", "attackTime", 6},
            {"Stomp", "attackTime", 7},
            {"Handstands", "repTime", 1},
            {"Pushups", "repTime", 1},
            {"Weight", "repTime", 1},
            {"Situps", "repTime", 1}
        }

        local player = game.Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")

        for _, toolInfo in ipairs(defaultSpeeds) do
            local tool = backpack:FindFirstChild(toolInfo[1])
            if tool and tool:FindFirstChild(toolInfo[2]) then
                tool[toolInfo[2]].Value = toolInfo[3]
            end
            local equippedTool = player.Character and player.Character:FindFirstChild(toolInfo[1])
            if equippedTool and equippedTool:FindFirstChild(toolInfo[2]) then
                equippedTool[toolInfo[2]].Value = toolInfo[3]
            end
        end
    end
end)
