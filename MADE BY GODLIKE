local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library/main/Library", true))()

local window = library:AddWindow("MoonHub-Elerium-Public", {
    main_color = Color3.fromRGB(0, 0, 0), 
    min_size = Vector2.new(470, 470), 
    can_resize = false,
})

-- Define toggle variables
local toggles = {
    autoJoinToggleBrawl = false,
    autoJoinToggleBrawlGOD = false,
    matrixkillaura = false,
    fasttools = false,
    autoweight = false,
    autopushups = false,
    autositups = false,
    autohandstands = false,
    autofrostrock = false,
    spinwheel = false,
    antiaccepttrade = false,
    antirebirth = false,
    autopunch = false,
    autopunchspeed = false,
    autokillall = false
}

local Main = window:AddTab("Main")
local folder = Main:AddFolder("Misc")

folder:AddButton("Anti AFK", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
end)

folder:AddSwitch("Auto Join Brawl", function(state)
    toggles.autoJoinToggleBrawl = state
    if state then
        task.spawn(function()
            while toggles.autoJoinToggleBrawl do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(2)
            end
        end)
    end
end)

folder:AddSwitch("Auto Join Brawl GOD", function(state)
    toggles.autoJoinToggleBrawlGOD = state
    if state then
        task.spawn(function()
            while toggles.autoJoinToggleBrawlGOD do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(0.5)
            end
        end)
    end
end)

folder:AddButton("Infinite Yield", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkNetworks/Infinite-Yield/main/latest.lua'))()
end)

folder:AddButton("FREE Auto Lift Pass", function()
    local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
    local player = game:GetService("Players").LocalPlayer
    for _, gamepass in pairs(gamepassFolder:GetChildren()) do
        local value = Instance.new("IntValue")
        value.Name = gamepass.Name
        value.Value = gamepass.Value
        value.Parent = player.ownedGamepasses
    end
end)

-- Continue on with matrix killaura
folder:AddSwitch("Matrix Kill Aura", function(state)
    toggles.matrixkillaura = state
    if state then
        getgenv().killNearby = true
        local radiusVisual = Instance.new("Part")
        radiusVisual.Anchored = true
        radiusVisual.CanCollide = false
        radiusVisual.Transparency = 0.8
        radiusVisual.Material = Enum.Material.ForceField
        radiusVisual.Color = Color3.fromRGB(225, 0, 0)
        radiusVisual.Size = Vector3.new(1, 0.1, 1)
        radiusVisual.Parent = workspace

        task.spawn(function()
            while getgenv().killNearby do
                pcall(function()
                    local myCharacter = game.Players.LocalPlayer.Character
                    local myRoot = myCharacter and myCharacter:FindFirstChild("HumanoidRootPart")
                    if myRoot then
                        local currentRadius = 10
                        radiusVisual.Size = Vector3.new(currentRadius * 10, 0.40, currentRadius * 10)
                        radiusVisual.CFrame = myRoot.CFrame * CFrame.new(0, -2, 0)

                        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                            if player ~= game.Players.LocalPlayer then
                                local char = player.Character
                                local root = char and char:FindFirstChild("HumanoidRootPart")
                                if root and (root.Position - myRoot.Position).Magnitude <= currentRadius then
                                    local killEffect = Instance.new("Part")
                                    killEffect.Anchored = true
                                    killEffect.CanCollide = false
                                    killEffect.Transparency = 0.5
                                    killEffect.Material = Enum.Material.Neon
                                    killEffect.Color = Color3.fromRGB(0, 0, 0)
                                    killEffect.CFrame = root.CFrame
                                    killEffect.Size = Vector3.new(5, 5, 5)
                                    killEffect.Parent = workspace

                                    game:GetService("TweenService"):Create(killEffect, TweenInfo.new(0.5), {
                                        Size = Vector3.new(0, 0, 0),
                                        Transparency = 1
                                    }):Play()

                                    game:GetService("Debris"):AddItem(killEffect, 0.5)
                                    firetouchinterest(root, myCharacter.LeftHand, 0)
                                    task.wait()
                                    firetouchinterest(root, myCharacter.LeftHand, 1)
                                end
                            end
                        end
                        task.wait(0.1)
                    end
                end)
                task.wait(0.1)
            end
            radiusVisual:Destroy()
        end)
    else
        getgenv().killNearby = false
    end
end)

folder:AddSwitch("Fast Tools", function(state)
    toggles.fasttools = state
    local speed = state and 0 or 0.35
    local player = game.Players.LocalPlayer
    local backpack = player:WaitForChild("Backpack")

    local toolsSpeed = {
        {"Punch", "attackTime", speed},
        {"Ground Slam", "attackTime", state and 0 or 6},
        {"Stomp", "attackTime", state and 0 or 7},
        {"Handstands", "repTime", speed},
        {"Pushups", "repTime", speed},
        {"Weight", "repTime", speed},
        {"Situps", "repTime", speed}
    }

    for _, toolInfo in ipairs(toolsSpeed) do
        local tool = backpack:FindFirstChild(toolInfo[1]) or (player.Character and player.Character:FindFirstChild(toolInfo[1]))
        if tool and tool:FindFirstChild(toolInfo[2]) then
            tool[toolInfo[2]].Value = toolInfo[3]
        end
    end
end)

local folder2 = Main:AddFolder("Misc V2")

folder2:AddSwitch("Auto SpinWheel", function(state)
    toggles.spinwheel = state
    if state then
        task.spawn(function()
            while toggles.spinwheel do
                game:GetService("ReplicatedStorage").rEvents.openFortuneWheelRemote:InvokeServer("openFortuneWheel", game:GetService("ReplicatedStorage").fortuneWheelChances["Fortune Wheel"])
                task.wait(1)
            end
        end)
    end
end)

folder2:AddButton("Claim all chests", function()
    task.spawn(function()
        while true do
            for i = 1, 8 do
                game:GetService("ReplicatedStorage").rEvents.freeGiftClaimRemote:InvokeServer("claimGift", i)
            end
            task.wait(1)
        end
    end)
end)

folder2:AddSwitch("Anti Accept Trade", function(state)
    toggles.antiaccepttrade = state
    if state then
        local OldNameCall
        OldNameCall = hookmetamethod(game, "__namecall", function(self, ...)
            local Args = {...}
            if self.Name == "tradingEvent" and Args[1] == "acceptTrade" then
                return
            end
            return OldNameCall(self, unpack(Args))
        end)
    elseif OldNameCall then
        -- Disable the anti-trade functionality.
        hookmetamethod(game, "__namecall", OldNameCall)
        OldNameCall = nil
    end
end)

folder2:AddButton("Auto Eat Ultra Eggs", function()
    _G.AutoEgg = true 
    task.spawn(function()
        while _G.AutoEgg do
            local boostFolder = game.Players.LocalPlayer:FindFirstChild("boostersfolder")
            if not boostFolder then
                if useOneEgg then  -- Ensure useOneEgg is defined
                    useOneEgg()  
                end
                task.wait(1)
            else
                local eggTimer = boostFolder:FindFirstChild("Ultra Shake")
                if not eggTimer or tonumber(eggTimer.Value) <= 2 then
                    if useOneEgg then  -- Ensure useOneEgg is defined
                        useOneEgg()  
                    end
                end
            end
            task.wait(1)
        end
    end)
end)

folder2:AddSwitch("Anti Rebirth", function(state)
    toggles.antirebirth = state
    if state then
        local OldNameCall
        OldNameCall = hookmetamethod(game, "__namecall", function(self, ...)
            local Args = {...}
            if self.Name == "rebirthRemote" and Args[1] == "rebirthRequest" then
                return
            end
            return OldNameCall(self, unpack(Args))
        end)
    elseif OldNameCall then
        -- Restore original behavior when disabling anti-rebirth
        hookmetamethod(game, "__namecall", OldNameCall)
        OldNameCall = nil
    end
end)

--------------------------------------------------------------------------------
-- Auto Weight Tab
local AutoWeight = window:AddTab("Auto Weight")
local folderWeight = AutoWeight:AddFolder("Auto Tools")

local function createAutoCallback(actionName, toolName)
    folderWeight:AddSwitch(actionName, function(state)
        toggles[actionName] = state
        if state then
            local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(toolName)
            if tool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
                while toggles[actionName] do
                    game.Players.LocalPlayer.muscleEvent:FireServer("rep")
                    task.wait(0.001)
                end
                
                -- Unequip tool when turning off
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild(toolName) then
                    character[toolName].Parent = game.Players.LocalPlayer.Backpack
                end
            end
        end
    end)
end

createAutoCallback("Auto Weight", "Weight")
createAutoCallback("Auto Pushups", "Pushups")
createAutoCallback("Auto Situps", "Situps")
createAutoCallback("Auto Handstands", "Handstands")

local AutoKill = window:AddTab("Auto Kill")
local folderAutoPunch = AutoKill:AddFolder("Auto Kill")

folderAutoPunch:AddSwitch("Auto Punch Normal", function(state)
    toggles.autopunch = state
    if state then
        _G.fastHitActive = true
        local function equipAndModifyPunch()
            while _G.fastHitActive do
                local player = game.Players.LocalPlayer
                local punch = player.Backpack:FindFirstChild("Punch")
                if punch then
                    punch.Parent = player.Character
                    if punch:FindFirstChild("attackTime") then
                        punch.attackTime.Value = 0
                    end
                end
                task.wait(0)
            end
        end
        coroutine.wrap(equipAndModifyPunch)()
    else
        local character = game.Players.LocalPlayer.Character
        local equipped = character:FindFirstChild("Punch")
        if equipped then
            equipped.Parent = game.Players.LocalPlayer.Backpack
        end
    end
end)

folderAutoPunch:AddSwitch("Auto Punch FAST", function(state)
    toggles.autopunchspeed = state
    if state then
        task.spawn(function()
            while toggles.autopunchspeed do
                local player = game.Players.LocalPlayer
                player.muscleEvent:FireServer("punch", "rightHand")
                player.muscleEvent:FireServer("punch", "leftHand")
                local character = player.Character
                if character then
                    local punchTool = character:FindFirstChild("Punch")
                    if punchTool then
                        punchTool:Activate()
                    end
                end
                task.wait(0)
            end
        end)
    end
end)

local folderAutoKill = AutoKill:AddFolder("Auto Kill")

folderAutoKill:AddSwitch("Auto Kill ALL", function(state)
    toggles.autokillall = state
    if state then
        _G.autoKillActive = true
        local function method1()
            while _G.autoKillActive do
                task.wait()
                local player = game.Players.LocalPlayer
                player.muscleEvent:FireServer("punch", "rightHand")
                player.muscleEvent:FireServer("punch", "leftHand")
                for _, otherPlayer in pairs(game.Players:GetChildren()) do
                    if otherPlayer.Name ~= player.Name and not table.find(whitelist, otherPlayer.Name) then
                        local character = game.Workspace:FindFirstChild(otherPlayer.Name)
                        local localCharacter = player.Character
                        if character and localCharacter then
                            local leftHand = localCharacter:FindFirstChild("LeftHand")
                            if leftHand then
                                local head = character:FindFirstChild("Head")
                                if head then
                                    head.CFrame = leftHand.CFrame
                                end
                                for _, descendant in pairs(character:GetDescendants()) do
                                    if descendant:IsA("BasePart") and descendant.Name == "Handle" then
                                        descendant.CFrame = leftHand.CFrame
                                    end
                                end
                                local sweatPart = character:FindFirstChild("sweatPart")
                                if sweatPart then
                                    sweatPart.CFrame = leftHand.CFrame
                                end
                            end
                        end
                    end
                end
            end
        end
        coroutine.wrap(method1)()
    else
        _G.autoKillActive = false
    end
end)
